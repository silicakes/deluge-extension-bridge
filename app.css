* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-family: Arial, sans-serif;
  background: var(--color-background);
  color: var(--color-text-primary);
  transition: var(--theme-transition);
}

p {
  /* margin: 0; */
  /* padding: 0; */
}


/* Top bar styles */
.top-bar {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding: 12px;
  margin-bottom: 10px;
  background-color: var(--color-surface);
  border-bottom: 1px solid var(--color-border);
  transition: var(--theme-transition);
}

.logo-container {
  display: flex;
  align-items: center;
  margin-right: 15px;
}

.app-logo {
  height: 40px;
  width: auto;
}

.bar-section {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 5px 0;
}

.midi-select {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 10px;
}

.midi-select label:first-child {
  font-weight: bold;
  margin-right: 5px;
}

.select-container {
  display: flex;
  align-items: center;
  gap: 5px;
}

.select-container select {
  padding: 4px;
  border-radius: 4px;
  border: 1px solid var(--color-border);
  background-color: var(--color-surface-alt);
  color: var(--color-text-primary);
  transition: var(--theme-transition);
}

.midi-auto {
  display: flex;
  align-items: center;
  gap: 15px;
}

/* Toggle switch styling */
.toggle {
  position: relative;
  display: flex;
  align-items: center;
  gap: 10px;
  cursor: pointer;
}

.toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
  background-color: var(--color-border);
  border-radius: 34px;
  transition: 0.4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: white;
  border-radius: 50%;
  transition: 0.4s;
}

input:checked + .slider {
  background-color: var(--color-button);
}

input:checked + .slider:before {
  transform: translateX(20px);
}

.toggle-label {
  user-select: none;
}

/* Status indicator styling */
.status-indicator {
  display: flex;
  align-items: center;
  gap: 5px;
  font-size: 14px;
}

.status-text {
  position: relative;
  padding-left: 18px;
}

.status-text:before {
  content: "‚óè";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  font-size: 16px;
  color: var(--color-status-default); /* Default state */
}

.status-text.connected:before {
  color: var(--color-status-connected); /* Connected state - green */
}

.status-text.error:before {
  color: var(--color-status-error); /* Error state - red */
}

/* Display action buttons */
.display-actions {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
}

.action-button {
  padding: 6px 10px;
  background-color: var(--color-button);
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  min-width: 80px;
  text-align: center;
  transition: var(--theme-transition);
}

.action-button:hover {
  background-color: var(--color-button-hover);
}

.action-button.active {
  background-color: var(--color-button-active);
}

.settings-button {
  width: 40px;
  height: 38px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-settings-button);
  border-radius: 4px;
  color: white;
  border: none;
  cursor: pointer;
  transition: var(--theme-transition);
}

.settings-icon {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
  filter: var(--icon-filter, none);
}

.settings-button.active .settings-icon {
  transform: rotate(90deg);
}

.settings-button:hover {
  background-color: var(--color-settings-button-hover);
}

.settings-button.active {
  background-color: var(--color-settings-button-active);
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);
}

/* Responsive layout */
@media (max-width: 600px) {
  .top-bar {
    flex-direction: column;
    align-items: flex-start;
  }

  .bar-section {
    width: 100%;
    justify-content: flex-start;
    margin-bottom: 10px;
  }

  .midi-select {
    flex-direction: column;
    align-items: flex-start;
  }

  .select-container {
    width: 100%;
  }

  .select-container select {
    flex-grow: 1;
  }

  .display-actions {
    justify-content: flex-start;
  }
}

/* Debug drawer styles */
.side-drawer {
  position: fixed;
  top: 0;
  right: 0;
  width: 350px;
  height: 100vh;
  background-color: var(--color-surface-alt);
  border-left: 1px solid var(--color-border);
  box-shadow: -3px 0 6px var(--color-drawer-shadow);
  transform: translateX(100%);
  transition: transform 0.3s ease-in-out, background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
  padding: 20px;
  overflow-y: auto;
  z-index: 1000;
}

.side-drawer.visible {
  transform: translateX(0);
}

.close-button {
  align-self: flex-end;
  width: 30px;
  height: 30px;
  padding: 0;
  background-color: transparent;
  color: var(--color-text-primary);
  border: none;
  cursor: pointer;
}

.close-icon {
  width: 27px;
  height: 27px;
  color: var(--color-text-secondary);
  transition: transform 0.3s ease;
  filter: var(--icon-filter, none);
}

.close-button:hover {
  background-color: transparent;
}

.close-button:hover .close-icon {
  transform: rotate(90deg);
}

.drawer-content {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

#toggleDebugDrawerButton {
  font-size: 18px;
  width: 27px;
  height: 27px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
}

#toggleDebugDrawerButton svg:hover {
  background-color: var(--color-settings-button-hover);
}

#toggleDebugDrawerButton svg {
  color: var(--color-text-secondary);
}

.canvas-resize-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin: 10px 0;
}

.canvas-dimensions {
  font-family: monospace;
  font-size: 14px;
  min-width: 80px;
  text-align: center;
}

#canvasIncreaseButton,
#canvasDecreaseButton {
  width: 40px;
  height: 40px;
  font-size: 24px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
}

#canvasIncreaseButton:disabled,
#canvasDecreaseButton:disabled {
  background-color: var(--color-disabled);
  cursor: not-allowed;
  opacity: 0.6;
}

.outbox {
  border: 1px solid var(--color-border);
  overflow-y: auto;
  padding: 10px;
  font-family: monospace;
  font-size: 12px;
  white-space: pre-wrap;
  background-color: var(--color-surface-alt);
  color: var(--color-text-primary);
  height: 280px;
  margin-bottom: 10px;
  margin-right: 30px;
  transition: var(--theme-transition);
}

button {
  padding: 5px 10px;
  margin-right: 5px;
  margin-bottom: 5px;
  background-color: var(--color-button);
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: var(--theme-transition);
}

button:hover {
  background-color: var(--color-button-hover);
}

#clearDebugButton,
#autoDebugButton {
  font-size: 12px;
  padding: 2px 5px;
  margin-left: 10px;
}

#debugOutput {
  direction: ltr;
  display: block;
  white-space: normal;
}

.controls-section {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 20px;
}

.control-group {
  border: 1px solid var(--color-border);
  border-radius: 5px;
  padding: 10px;
  background-color: var(--color-surface);
  min-width: 250px;
  transition: var(--theme-transition);
}

.control-group h3 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 16px;
  color: var(--color-text-primary);
  border-bottom: 1px solid var(--color-border);
  padding-bottom: 5px;
  transition: var(--theme-transition);
}

.custom-sysex {
  display: flex;
  gap: 5px;
  margin-bottom: 5px;
}

#customSysExInput {
  flex: 1;
  padding: 5px;
  border: 1px solid var(--color-border);
  border-radius: 4px;
  font-family: monospace;
  background-color: var(--color-surface-alt);
  color: var(--color-text-primary);
  transition: var(--theme-transition);
}

.sysex-examples {
  font-size: 12px;
  color: var(--color-text-secondary);
}

.sysex-example {
  cursor: pointer;
  background-color: var(--color-surface-hover);
  padding: 2px 4px;
  border-radius: 3px;
  font-family: monospace;
  transition: var(--theme-transition);
}

.sysex-example:hover {
  background-color: var(--color-surface-active);
}

.display-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-bottom: 10px;
}

/* OLED Display Settings Styles */
.display-settings {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.setting-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.setting-row label {
  flex: 1;
  margin-right: 10px;
}

.setting-row input {
  width: 70px;
  padding: 3px 5px;
  border: 1px solid var(--color-border);
  border-radius: 4px;
  background-color: var(--color-surface-alt);
  color: var(--color-text-primary);
  transition: var(--theme-transition);
}

.setting-row input[type="color"] {
  height: 30px;
  padding: 0;
  border: none;
  cursor: pointer;
}

#applyDisplaySettings {
  margin-top: 8px;
  width: 100%;
  background-color: var(--color-primary);
}

/* Theme selection styles */
.theme-controls {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.theme-options {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.theme-option {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 4px 0;
}

.theme-option input[type="radio"] {
  margin: 0;
}

.theme-option label {
  cursor: pointer;
}

/* Remove duplicate icon filter definitions as they're in theme.css now */

/* Fullscreen Mode Styles */
body.fullscreen-mode #topBar,
body.fullscreen-mode .side-drawer,
body.fullscreen-mode .canvas-resize-controls {
  display: none !important;
}

body.fullscreen-mode {
  overflow: hidden !important;
  position: fixed;
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  background-color: var(--color-background);
  touch-action: manipulation;
}

body.fullscreen-mode .display-section {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  background-color: var(--color-background);
  animation: fadeIn 0.2s ease;
}

/* Direct styling for canvas in fullscreen mode */
body.fullscreen-mode #screenCanvas {
  display: block;
  margin: auto;
  max-width: 95vw;
  max-height: 90vh;
}

@keyframes fadeIn {
  from { opacity: 0.7; }
  to { opacity: 1; }
}
